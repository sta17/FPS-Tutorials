[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://dyhehtomqxcmb"]

[ext_resource type="Texture2D" uid="uid://bj1rxx8lrcb4q" path="res://assets/Le Lu's Textures/T_Noise1_tiled.png" id="1_tdfct"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_s633l"]
output_port_for_preview = 0
expanded_output_ports = [0]
texture = ExtResource("1_tdfct")
texture_type = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_r00km"]
parameter_name = "AuraColor"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_dbp5r"]
parameter_name = "AuraIntensity"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_iyvqr"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_tufwl"]

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_josmw"]
parameter_name = "Speed"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_63l6u"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_6tr7y"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 AuraColor : source_color;
uniform float AuraIntensity;
uniform vec2 Speed;
uniform sampler2D tex_frg_2 : source_color;



void fragment() {
// ColorParameter:3
	vec4 n_out3p0 = AuraColor;


// FloatParameter:4
	float n_out4p0 = AuraIntensity;


// VectorOp:5
	vec4 n_out5p0 = n_out3p0 * vec4(n_out4p0);


// Input:8
	float n_out8p0 = TIME;


// Vector2Parameter:7
	vec2 n_out7p0 = Speed;


// VectorOp:9
	vec2 n_out9p0 = vec2(n_out8p0) * n_out7p0;


// UVFunc:6
	vec2 n_in6p1 = vec2(1.00000, 1.00000);
	vec2 n_out6p0 = n_out9p0 * n_in6p1 + UV;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, n_out6p0);
	float n_out2p1 = n_out2p0.r;


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	ALPHA = n_out2p1;


}
"
graph_offset = Vector2(-529.132, -39.5569)
flags/unshaded = true
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_s633l")
nodes/fragment/2/position = Vector2(-220, 600)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_r00km")
nodes/fragment/3/position = Vector2(-260, 60)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_dbp5r")
nodes/fragment/4/position = Vector2(-260, 320)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_iyvqr")
nodes/fragment/5/position = Vector2(80, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeUVFunc_tufwl")
nodes/fragment/6/position = Vector2(-640, 700)
nodes/fragment/7/node = SubResource("VisualShaderNodeVec2Parameter_josmw")
nodes/fragment/7/position = Vector2(-1160, 780)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_63l6u")
nodes/fragment/8/position = Vector2(-1180, 640)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorOp_6tr7y")
nodes/fragment/9/position = Vector2(-860, 720)
nodes/fragment/connections = PackedInt32Array(3, 0, 5, 0, 4, 0, 5, 1, 6, 0, 2, 0, 8, 0, 9, 0, 7, 0, 9, 1, 9, 0, 6, 2, 5, 0, 0, 0, 2, 1, 0, 1)
